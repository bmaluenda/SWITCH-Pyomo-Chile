Notes on the Switch Pyomo deterministic formulation:

--The transmission build and dispatch scripts have some interesting border cases. Length and capacity of 0 value are not allowed. Capacities of 0 MW should evidently be allowed, since that's how you model candidate lines that have not yet been constructed. Lengths of 0 I'm not so sure, since I cannot think of a useful case for this, even though the Chile DB has one of those inmediately adjacent nodes.

--Discrete transmission builds should be allowed. In fact, it is even more important to build Tx in discrete amounts than Gx, since that is what actually happens in reality.
TODO: Create discrete_trans_build.py script analogous to the discrete Gx build script, to allow binary or integer building of proposed lines.

--Transmission building costs are not calculated correctly, since they don't multiply their unitary cost by the length of the constructed line.
TODO: Fix this bug in the core repository.

------------------------------------------------------------------------------------------------------------
Notes on the Chile implementation of Switch Pyomo:

--Variable Capacity Factors for renewable projects are imported to the input files for all the duration of the study period. Switch only wants to recieve VCF's for timepoints in which that particular project is operational, so if the service life of the unit is spent before the end of the study horizon, an error is risen.
TODO: (i) Modify the .tab builder script to avoid inputting VCF's after a project is dead. This would avoid having to mess with Switch code.

--Fuel markets could be successfully used to represent not only biomass, but -more importantly- natural gas markets. The fuel_markets_expansion.py script of Matthias could be used to model the possibility of LNG terminals being built in the future.
TODO: (i) Analyze the feasibility and utility of modelling LNG terminal investment. (ii) Creating necessary inputs for implementation in the DB.

--A capacity reserves constraint script is already written, copying the Chile-AMPL implementation of this requirement (15%).
TODO: (i) Reevaluate and modify this constraint for a better representation fo capacity reserves. Should it include net transmission? Should it include renewable capacity (instead of ELCC)? (ii) Discuss the 15% value and check its validity.

--Matthias already wrote RPS code for Hawaii.
TODO: (i) Adapt the script to represent the Chilean way of accounting for renewables.

--

------------------------------------------------------------------------------------------------------------
Notes on stochastic Switch implementation with PySP:

-Gurobi no se pude usar con PySP hasta que se agregue el plugin GUROBI al PYTHONPATH (dentro de la carpeta de pyomo en Anaconda)
-Al usar GLPK en PySP se usa GLPKold, el que no admite costos reducidos
-Ojo con las variables que se declaran por etapa en el ScenarioStructure.dat. Solo se incluyen variables que afectan la F.O. (no DumpPower, por ej)
-Problema con 'DistillateFuelOil'
-Se está demorando 7 min en el sympify
-Se demora en construir los Rho
-Con el Rhosetter las inversiones son subóptimas! Al achicar el Rho default, converge perfecto al EF, pero se demora mucho más
-Sí se pueden setear costos de inversión distintos por escenario. Los Rho se setean por escenario, así que sí se captura.
-Usando linearized se demoró más con los input-minimals. Además, es aún más subóptimo (usando el rhosetter).
-Bounding no es necesario cuando se lineariza el término cuadrático de la FO si es que las variables de los nodos tienen límites sup e inf en el modelo mismo. Para SWITCH, se puede solucionar haciendo que todo proyecto tenga una capacidad máxima de instalación.
-Interesante idea: primeras iteraciones del PH resolviendo cada subproblema con un MIPgap grande y a medida que se itera en el algoritmo, ir achicándolo.

batteries -> represas